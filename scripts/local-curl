#!/bin/bash

# local-curl - Generic HTTP request helper for localhost
# Usage: local-curl <METHOD> <port>/<path> [data]
# Examples:
#   local-curl GET 8787/health
#   local-curl POST 8787/api/v1/llm/prompt '{"prompt":"Hello"}'
#   local-curl DELETE 8787/api/v1/conversations/123

if [ -z "$1" ] || [ -z "$2" ]; then
  echo "Usage: local-curl <METHOD> <port>/<path> [data]"
  echo "Examples:"
  echo "  local-curl GET 8787/health"
  echo "  local-curl POST 8787/api/v1/llm/prompt '{\"prompt\":\"Hello\"}'"
  exit 1
fi

METHOD="$1"
IFS='/' read -r port path <<< "$2"
path="/${path#/}"  # Ensure path starts with /
DATA="$3"

# Build curl command
CURL_CMD="curl -s -X $METHOD"

# Add data if provided (for POST/PUT/PATCH)
if [ -n "$DATA" ]; then
  CURL_CMD="$CURL_CMD -H 'Content-Type: application/json' -d '$DATA'"
fi

# Execute request
CURL_CMD="$CURL_CMD -w '\n%{http_code}' http://localhost:${port}${path}"
response=$(eval "$CURL_CMD")

# Parse response
http_code=$(echo "$response" | tail -n 1)
body=$(echo "$response" | sed '$d')

# Handle response
if [ "$http_code" = "000" ]; then
  echo "❌ Failed to connect to localhost:${port}"
  exit 1
elif [ "$http_code" -ge 200 ] && [ "$http_code" -lt 300 ]; then
  echo "$body"
else
  echo "❌ HTTP $http_code"
  echo "$body"
  exit 1
fi