{
  "name": "liminal-chat",
  "version": "1.0.0",
  "private": true,
  "description": "A threshold between human and AI communication",
  "scripts": {
    "claude": "./scripts/claude-shell.sh",
    "dev": "pnpm -r --parallel run dev",
    "dev:all": "pnpm -r --parallel run dev",
    "web:dev": "cd apps/web && npm run dev",
    "web:build": "cd apps/web && npm run build",
    "web:start": "cd apps/web && npm run start",
    "build": "pnpm check:error-codes && pnpm -r run build",
    "build:all": "pnpm check:error-codes && pnpm -r run build",
    "test": "pnpm -r run test",
    "test:cov": "pnpm -F domain-server-nest test:cov",
    "test:all": "pnpm test",
    "lint": "pnpm -r run lint",
    "typecheck": "pnpm -r run typecheck",
    "check:error-codes": "node scripts/check-error-usage.js",
    "clean": "pnpm -r run clean && rm -rf node_modules",
    "install:all": "pnpm install -r",
    "health:domain": "./scripts/GET 8766/health",
    "health:all": "npm run health:domain",
    "local-curl": "./scripts/local-curl",
    "domain:dev": "cd apps/domain && pnpm start:dev",
    "cli:dev": "cd apps/cli && pnpm dev",
    "domain:start": "pm2 start --name domain --cwd apps/domain npm -- run start:dev",
    "domain:stop": "pm2 delete domain || true",
    "domain:restart": "pnpm domain:stop && pnpm domain:start",
    "cli:chat": "cd apps/cli && pnpm dev chat",
    "cli:chat:echo": "cd apps/cli && pnpm dev chat --provider echo",
    "cli:chat:openrouter": "cd apps/cli && pnpm dev chat --provider openrouter",
    "cli:or:stream": "cd apps/cli && pnpm dev chat --provider openrouter --stream",
    "cli:providers": "cd apps/cli && pnpm dev providers",
    "cli:help": "cd apps/cli && pnpm dev --help",
    "cli:build": "pnpm -F @liminal/cli build",
    "cli:test": "pnpm -F @liminal/cli test",
    "cli:test:e2e": "pnpm -F @liminal/cli test:e2e",
    "domain:test": "pnpm -F domain-server-nest test",
    "domain:test:integration": "pnpm -F domain-server-nest test:integration",
    "start:all": "pnpm domain:start",
    "stop:all": "pm2 stop all || true",
    "restart:all": "pnpm stop:all && pnpm start:all",
    "typecheck:watch": "tsc --noEmit --watch -p tsconfig.json",
    "verify:all": "tsx scripts/verify.ts",
    "verify:no-tests": "pnpm lint && pnpm typecheck",
    "test:playwright": "playwright test",
    "test:playwright:headed": "playwright test --headed",
    "test:playwright:debug": "playwright test --debug",
    "test:playwright:ui": "playwright test --ui",
    "test:playwright:report": "playwright show-report tests/reports/html-report",
    "test:playwright:install": "playwright install",
    "test:playwright:codegen": "playwright codegen",
    "test:integration": "playwright test --config=playwright.config.integration.ts --project=integration-domain",
    "test:integration:domain": "playwright test --config=playwright.config.integration.ts --project=integration-domain",
    "test:integration:domain:health": "playwright test --config=playwright.config.integration.ts tests/integration/domain/health.spec.ts --project=integration-domain",
    "test:integration:domain:llm": "playwright test --config=playwright.config.integration.ts tests/integration/domain/llm-prompt.spec.ts --project=integration-domain",
    "test:integration:domain:providers": "playwright test --config=playwright.config.integration.ts tests/integration/domain/providers.spec.ts --project=integration-domain",
    "test:integration:domain:streaming": "playwright test --config=playwright.config.integration.ts tests/integration/domain/streaming.spec.ts --project=integration-domain",
    "test:integration:domain:real-providers": "playwright test --config=playwright.config.integration.ts tests/integration/domain/real-providers.spec.ts --project=integration-domain",
    "test:integration:domain:errors": "playwright test --config=playwright.config.integration.ts tests/integration/domain/error-scenarios.spec.ts --project=integration-domain",
    "test:integration:domain:show-report": "PLAYWRIGHT_OPEN_REPORT=true playwright test --config=playwright.config.integration.ts --project=integration-domain",
    "test:integration:show-report": "PLAYWRIGHT_OPEN_REPORT=true playwright test --config=playwright.config.integration.ts --project=integration-domain"
  },
  "devDependencies": {
    "@playwright/experimental-ct-react": "^1.48.2",
    "@playwright/test": "^1.48.2",
    "pm2": "^6.0.8",
    "tsx": "^4.7.0",
    "typescript": "^5.3.3"
  },
  "packageManager": "pnpm@8.15.1"
}